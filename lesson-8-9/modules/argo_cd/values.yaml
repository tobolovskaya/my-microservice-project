# Argo CD configuration
global:
  image:
    tag: "v2.9.3"

## Argo CD configuration
configs:
  # General Argo CD configuration
  params:
    # Run server without TLS
    server.insecure: true
    # Disable internal TLS
    server.grpc.web: true
    # Application instance label key
    application.instanceLabelKey: argocd.argoproj.io/instance

  # Repository credentials template
  credentialTemplates:
    github-creds:
      url: https://github.com
      username: git
      password: your-github-token-here  # Replace with actual token

  # Repository configuration
  repositories:
    lesson-8-9-repo:
      url: https://github.com/your-username/your-repo.git
      name: lesson-8-9
      type: git

## Server configuration
server:
  # Service configuration
  service:
    type: LoadBalancer
    servicePortHttp: 80
    servicePortHttps: 443

  # Ingress configuration (disabled, using LoadBalancer)
  ingress:
    enabled: false

  # Server configuration
  extraArgs:
    - --insecure

  # Resources
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

  # Metrics
  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8083"
        prometheus.io/path: "/metrics"

## Repository Server
repoServer:
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8084"
        prometheus.io/path: "/metrics"

## Application Controller
controller:
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/metrics"

## Dex (disabled for simplicity)
dex:
  enabled: false

## Redis
redis:
  enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

## Notifications controller (optional)
notifications:
  enabled: false

## ApplicationSet controller (optional)
applicationSet:
  enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

## RBAC configuration
rbac:
  # Policy CSV file for RBAC
  policy.default: role:readonly
  policy.csv: |
    p, role:admin, applications, *, */*, allow
    p, role:admin, clusters, *, *, allow
    p, role:admin, repositories, *, *, allow
    p, role:readonly, applications, get, */*, allow
    p, role:readonly, applications, action/*, */*, allow
    g, argocd-admins, role:admin

  # RBAC scopes
  scopes: '[groups]'