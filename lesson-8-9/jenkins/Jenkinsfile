pipeline {
    agent {
        kubernetes {
            label 'kaniko'
            yaml """
apiVersion: v1
kind: Pod
spec:
  serviceAccountName: jenkins-sa
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
    - name: docker-config
      mountPath: /kaniko/.docker
    env:
    - name: DOCKER_CONFIG
      value: /kaniko/.docker
  - name: git
    image: alpine/git:latest
    command:
    - cat
    tty: true
  volumes:
  - name: docker-config
    configMap:
      name: kaniko-config
"""
        }
    }
    
    environment {
        ECR_REGISTRY = "${ECR_REPOSITORY_URL.split('/')[0]}"
        ECR_REPOSITORY = "${ECR_REPOSITORY_URL.split('/')[1]}"
        AWS_DEFAULT_REGION = 'us-west-2'
        IMAGE_TAG = "${BUILD_NUMBER}"
        GIT_REPO_URL = 'https://github.com/your-username/your-repo.git'
        GIT_CREDENTIALS_ID = 'git-credentials'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build and Push Docker Image') {
            steps {
                container('kaniko') {
                    script {
                        sh """
                            /kaniko/executor \\
                                --dockerfile=dockerized-django/Dockerfile \\
                                --context=dockerized-django \\
                                --destination=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} \\
                                --destination=${ECR_REGISTRY}/${ECR_REPOSITORY}:latest
                        """
                    }
                }
            }
        }
        
        stage('Update Helm Chart') {
            steps {
                container('git') {
                    script {
                        withCredentials([usernamePassword(credentialsId: env.GIT_CREDENTIALS_ID, usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                            sh """
                                # Configure git
                                git config --global user.email "jenkins@example.com"
                                git config --global user.name "Jenkins CI"
                                
                                # Update values.yaml with new image tag
                                sed -i 's|tag: ".*"|tag: "${IMAGE_TAG}"|g' charts/django-app/values.yaml
                                sed -i 's|repository: ".*"|repository: "${ECR_REGISTRY}/${ECR_REPOSITORY}"|g' charts/django-app/values.yaml
                                
                                # Commit and push changes
                                git add charts/django-app/values.yaml
                                git commit -m "Update Django app image to ${IMAGE_TAG}" || echo "No changes to commit"
                                
                                # Push to repository
                                git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/your-username/your-repo.git HEAD:main
                            """
                        }
                    }
                }
            }
        }
        
        stage('Trigger Argo CD Sync') {
            steps {
                script {
                    // Optional: Trigger Argo CD sync via API
                    sh """
                        echo "Image ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} has been pushed"
                        echo "Helm chart updated with new image tag: ${IMAGE_TAG}"
                        echo "Argo CD will automatically sync the changes"
                    """
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo "Pipeline completed successfully! Image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
        }
        failure {
            echo "Pipeline failed. Please check the logs."
        }
    }
}